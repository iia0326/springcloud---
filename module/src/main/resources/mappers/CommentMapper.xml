<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kangyi.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.kangyi.pojo.Comment">
    <result column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="send_id" jdbcType="BIGINT" property="sendId" />
    <result column="vote_up" jdbcType="INTEGER" property="voteUp" />
    <result column="vote_down" jdbcType="INTEGER" property="voteDown" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="parent_name" jdbcType="VARCHAR" property="parentName" />
    <result column="comment_louzhu" jdbcType="TINYINT" property="commentLouzhu" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="parent_read" jdbcType="VARCHAR" property="parentRead" />
    <result column="message_type" jdbcType="TINYINT" property="messageType" />
    <result column="user_remark" jdbcType="VARCHAR" property="userRemark" />
    <result column="admin_remark" jdbcType="VARCHAR" property="adminRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, content, parent_id, order_id, send_id, vote_up, vote_down, level, status, 
    create_time, update_time, user_name, parent_name, comment_louzhu, type, type_name, 
    parent_read, message_type, user_remark, admin_remark
  </sql>
  <select id="selectByExample" parameterType="com.kangyi.pojo.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.kangyi.pojo.CommentExample">
    delete from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kangyi.pojo.Comment">

    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="commentId">
      SELECT LAST_INSERT_ID()
    </selectKey>


    insert into t_comment (comment_id, content, parent_id, 
      order_id, send_id, vote_up, 
      vote_down, level, status, 
      create_time, update_time, user_name, 
      parent_name, comment_louzhu, type, 
      type_name, parent_read, message_type, 
      user_remark, admin_remark)
    values (#{commentId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{orderId,jdbcType=BIGINT}, #{sendId,jdbcType=BIGINT}, #{voteUp,jdbcType=INTEGER}, 
      #{voteDown,jdbcType=INTEGER}, #{level,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{userName,jdbcType=VARCHAR}, 
      #{parentName,jdbcType=VARCHAR}, #{commentLouzhu,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, 
      #{typeName,jdbcType=VARCHAR}, #{parentRead,jdbcType=VARCHAR}, #{messageType,jdbcType=TINYINT}, 
      #{userRemark,jdbcType=VARCHAR}, #{adminRemark,jdbcType=VARCHAR})
  </insert>



  <insert id="insertList" parameterType="java.util.List">

    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="commentId">
      SELECT LAST_INSERT_ID()
    </selectKey>


    insert into t_comment (comment_id, content, parent_id,
    order_id, send_id, vote_up,
    vote_down, level, status,
    create_time, update_time, user_name,
    parent_name, comment_louzhu, type,
    type_name, parent_read, message_type,
    user_remark, admin_remark)
    values
    <foreach collection="list" item="i" index="index" separator="," >
     (#{i.commentId,jdbcType=BIGINT}, #{i.content,jdbcType=VARCHAR}, #{i.parentId,jdbcType=BIGINT},
    #{i.orderId,jdbcType=BIGINT}, #{i.sendId,jdbcType=BIGINT}, #{i.voteUp,jdbcType=INTEGER},
    #{i.voteDown,jdbcType=INTEGER}, #{i.level,jdbcType=TINYINT}, #{i.status,jdbcType=TINYINT},
    #{i.createTime,jdbcType=TIMESTAMP}, #{i.updateTime,jdbcType=TIMESTAMP}, #{i.userName,jdbcType=VARCHAR},
    #{i.parentName,jdbcType=VARCHAR}, #{i.commentLouzhu,jdbcType=TINYINT}, #{i.type,jdbcType=TINYINT},
    #{i.typeName,jdbcType=VARCHAR}, #{i.parentRead,jdbcType=VARCHAR}, #{i.messageType,jdbcType=TINYINT},
    #{i.userRemark,jdbcType=VARCHAR}, #{i.adminRemark,jdbcType=VARCHAR})
    </foreach>
  </insert>




  <insert id="insertSelective" parameterType="com.kangyi.pojo.Comment">
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="sendId != null">
        send_id,
      </if>
      <if test="voteUp != null">
        vote_up,
      </if>
      <if test="voteDown != null">
        vote_down,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="parentName != null">
        parent_name,
      </if>
      <if test="commentLouzhu != null">
        comment_louzhu,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="parentRead != null">
        parent_read,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="userRemark != null">
        user_remark,
      </if>
      <if test="adminRemark != null">
        admin_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="sendId != null">
        #{sendId,jdbcType=BIGINT},
      </if>
      <if test="voteUp != null">
        #{voteUp,jdbcType=INTEGER},
      </if>
      <if test="voteDown != null">
        #{voteDown,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="parentName != null">
        #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="commentLouzhu != null">
        #{commentLouzhu,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="parentRead != null">
        #{parentRead,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=TINYINT},
      </if>
      <if test="userRemark != null">
        #{userRemark,jdbcType=VARCHAR},
      </if>
      <if test="adminRemark != null">
        #{adminRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kangyi.pojo.CommentExample" resultType="java.lang.Long">
    select count(*) from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=BIGINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.sendId != null">
        send_id = #{record.sendId,jdbcType=BIGINT},
      </if>
      <if test="record.voteUp != null">
        vote_up = #{record.voteUp,jdbcType=INTEGER},
      </if>
      <if test="record.voteDown != null">
        vote_down = #{record.voteDown,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentName != null">
        parent_name = #{record.parentName,jdbcType=VARCHAR},
      </if>
      <if test="record.commentLouzhu != null">
        comment_louzhu = #{record.commentLouzhu,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentRead != null">
        parent_read = #{record.parentRead,jdbcType=VARCHAR},
      </if>
      <if test="record.messageType != null">
        message_type = #{record.messageType,jdbcType=TINYINT},
      </if>
      <if test="record.userRemark != null">
        user_remark = #{record.userRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.adminRemark != null">
        admin_remark = #{record.adminRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_comment
    set comment_id = #{record.commentId,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      send_id = #{record.sendId,jdbcType=BIGINT},
      vote_up = #{record.voteUp,jdbcType=INTEGER},
      vote_down = #{record.voteDown,jdbcType=INTEGER},
      level = #{record.level,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      user_name = #{record.userName,jdbcType=VARCHAR},
      parent_name = #{record.parentName,jdbcType=VARCHAR},
      comment_louzhu = #{record.commentLouzhu,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      parent_read = #{record.parentRead,jdbcType=VARCHAR},
      message_type = #{record.messageType,jdbcType=TINYINT},
      user_remark = #{record.userRemark,jdbcType=VARCHAR},
      admin_remark = #{record.adminRemark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>